{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isLoggedIn","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0a7a984c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// realizar lo de las variables de entorno en notion\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASEURL,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID,\r\n  };\r\n\r\n// const firebaseConfigTesting = {\r\n//   apiKey: \"AIzaSyCmqiZPlrFAEBOwvDcMFeTBzn06vivPAj4\",\r\n//   authDomain: \"sql-demos-2e45f.firebaseapp.com\",\r\n//   databaseURL: \"https://sql-demos-2e45f.firebaseio.com\",\r\n//   projectId: \"sql-demos-2e45f\",\r\n//   storageBucket: \"sql-demos-2e45f.appspot.com\",\r\n//   messagingSenderId: \"648787701122\",\r\n//   appId: \"1:648787701122:web:2998c8f61ca429b993739b\",\r\n//   measurementId: \"\"\r\n// };\r\n\r\n// if(process.env.NODE_ENV === 'test'){\r\n//   // testing\r\n//   firebase.initializeApp(firebaseConfigTesting);\r\n\r\n// }else{\r\n//   //dev/prod\r\n//   // Initialize Firebase\r\n//   firebase.initializeApp(firebaseConfig);\r\n// }\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport{\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dumihjct9/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        \r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n   const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n   const notes = [];\r\n\r\n   notesSnap.forEach(snapHijo => {\r\n       notes.push({\r\n           id: snapHijo.id,\r\n           ...snapHijo.data()\r\n       })\r\n   });\r\n\r\n   return notes;\r\n}","\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n// getState funcion para obtener el state (similar al useSelector)   \r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        try {\r\n            const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n            dispatch(activeNote(doc.id, newNote));\r\n            dispatch(addNewNote(doc.id, newNote));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n       \r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = uid => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n} \r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {uid} = getState().auth;\r\n\r\n        if(!note.url) delete note.url;\r\n\r\n        const noteToFirestore = {...note};\r\n        // delete borra una propiedad de un objeto\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, note));\r\n        Swal.fire('Save', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = file => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {active: activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n        \r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n        Swal.fire('Deleted', 'Note deleted','success' );\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","  \r\nimport { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>23 de noviembre de 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name = \"file\"\r\n                style = { { display: 'none' } }\r\n                onChange = {handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick = {handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {active: note} = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const {body, title, id} = formValues;\r\n\r\n    // Permite almacenar una variable mutable que no va a redibujar todo el componente si cambia\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n\r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    },[note, reset, activeId.current])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote(formValues.id, {...formValues}) );\r\n        \r\n    }, [formValues ,dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"                    \r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value = {title}\r\n                    onChange={handleInputChange}\r\n                    name=\"title\"\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__text-area\"\r\n                    value = {body}\r\n                    onChange={handleInputChange}\r\n                    name=\"body\"\r\n                ></textarea>\r\n                {\r\n                    (note.url) &&\r\n                    (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={note.url}\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                dispatch(finishLoading())\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile({displayName: name});\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) =>({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n \r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {\r\n            date, title, body, url\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n           { \r\n               url &&\r\n               <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes &&\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { authReducer } from '../../reducers/authReducer';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // Con esto se obtiene informacion del state\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    \r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\" />\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n// import { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n\r\n            <Sidebar />\r\n\r\n            \r\n            <main>\r\n\r\n            {\r\n                (active)\r\n                    ? (<NoteScreen />)\r\n                    : (<NothingSelected />)\r\n            }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n// TODO: REALIZAR VALIDACIONES CON MENSAJE DE ERRORES\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email}\r\n                    onChange={handleInputChange}\r\n                />\r\n               \r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled = {loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social network</p>\r\n                    <div className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                > \r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // Permite obtener los datos del state\r\n    const {msgError} = useSelector(state => state.ui);\r\n \r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n       if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n     }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('Name is required'))\r\n            return false;\r\n        }else if (!validator.isEmail(email)){\r\n            dispatch(setError('Email is not correct'))\r\n            return false;\r\n        }else if(password !== password2 || password.length < 5){\r\n            dispatch(setError('Password should be at least 6 characters and match each other'))\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n            {\r\n                msgError &&\r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange = {handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange = {handleInputChange}\r\n                />\r\n               \r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange = {handleInputChange}\r\n                />\r\n\r\n                <input  \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange = {handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                \r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                > \r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n// Si no esta autenticado, manda el componente el cual es el login\r\n    return (\r\n        <Route {...rest}\r\n            component = { props => (\r\n                (isLoggedIn)\r\n                    ? <Redirect to=\"/\"/>\r\n                    : <Component {...props}/>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n// Si no esta autenticado, manda el componente el cual es el login\r\n    return (\r\n        <Route {...rest}\r\n            component = { props => (\r\n                (isLoggedIn)\r\n                    ? <Component {...props}/>\r\n                    : <Redirect to=\"/auth/login\"/>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( user => {\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n        \r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if(checking){\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            path = \"/auth\"\r\n                            isLoggedIn = {isLoggedIn}\r\n                            component = { AuthRouter }\r\n                        />\r\n                  \r\n                        <PrivateRoute \r\n                            exact\r\n                            path = \"/\"\r\n                            component = {JournalScreen }\r\n                            isLoggedIn = {isLoggedIn}\r\n                        />\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n    );\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n            \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return initialState;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }      \r\n            \r\n        case types.uiRemoveError:\r\n        return {\r\n            ...state,\r\n            msgError: null\r\n        }      \r\n        \r\n        case types.uiStartLoading:\r\n        return {\r\n            ...state,\r\n            loading: true\r\n        }      \r\n        \r\n        case types.uiFinishLoading:\r\n        return {\r\n            ...state,\r\n            loading: false\r\n        }      \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, combineReducers, applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n// Solo se puede enviar 1 reducer, por eso se utiliza la funcion de arriba (combineReducers)\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }     \r\n            \r\n        case types.logout:\r\n        return { }     \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JournalApp } from './JournalApp';\r\n\r\nimport './styles/styles.scss';\r\n\r\nReactDOM.render(\r\n    <JournalApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}